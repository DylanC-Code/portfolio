name: Build and deploy on cloud based on pushed branch

on:
  push:
    branches:
      - feature/ci
      - develop
      - main
      - staging

jobs:
  build:
    name: Build project

    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Clean install
        run: pnpm i

      - name: Build
        run: pnpm build
        env:
          PUBLIC_SERVER_ADDRESS: ${{vars.PUBLIC_SERVER_ADDRESS}}

      - name: Deploy Infra
        run: |
          if [ "${{github.ref}}" == "ref/heads/develop" ]; then
            terraform apply -auto-approve -var 'domain=${{vars.DOMAIN_NAME}}' -var 'sub_domain=${{vars.DEV_SUBDOMAIN}}' -var 'destination_email=${{vars.DESTINATION_EMAIL}}' -var 'ses_email_from=${{vars.SES_EMAIL_FROM}}'
          elif [ "${{github.ref}}" == "ref/heads/staging" ]; then
            terraform apply -auto-approve -var 'domain=${{vars.DOMAIN_NAME}}' -var 'sub_domain=${{vars.STAGING_SUBDOMAIN}}' -var 'destination_email=${{vars.DESTINATION_EMAIL}}' -var 'ses_email_from=${{vars.SES_EMAIL_FROM}}'
          elif [ "${{github.ref}}" == "ref/heads/main" ]; then
            terraform apply -auto-approve -var 'domain=${{vars.DOMAIN_NAME}}' -var 'destination_email=${{vars.DESTINATION_EMAIL}}' -var 'ses_email_from=${{vars.SES_EMAIL_FROM}}'
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: Sync files to 'dev' S3
        if: github.ref == 'refs/heads/develop'
        run: aws s3 sync build s3://${{ vars.DEV_SUBDOMAIN }}${{ vars.DOMAIN_NAME }} --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Sync files to 'staging' S3
        if: github.ref == 'refs/heads/staging'
        run: aws s3 sync build s3://${{ vars.STAGING_SUBDOMAIN }}${{ vars.DOMAIN_NAME }} --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Sync files to 'prod' S3
        if: github.ref == 'refs/heads/main'
        run: aws s3 sync build s3://${{ vars.DOMAIN_NAME }} --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
